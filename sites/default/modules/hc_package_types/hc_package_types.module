<?php


/**
 * Implements hook_menu
 */
function hc_package_types_menu() {
  $items['admin/commerce/config/package'] = array(
    'title' => 'Package Type settings',
    'description' => 'Settings for different package types',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hc_packages_settings_form'),
    'file' => 'hc_package_types.admin.inc',
    'access arguments' => array('configure store'),
  );
  
  return $items;
}



/**
 * Implements hook_commerce_cart_product_add()
 */
function hc_package_types_commerce_cart_product_add($order, $product, $quantity, $line_item) {
}


/**
 * Implements hook_form_alter
 */
function hc_package_types_form_alter(&$form, &$form_state, $form_id) {
  if (strstr($form_id, 'commerce_cart_add_to_cart_form')) {
    if (isset($form['attributes']['field_package_type'])) {
      $product_id = $form['product_id']['#value'];
      $default_product = commerce_product_load($product_id);
    
      $fields = entity_metadata_wrapper('commerce_product', $default_product);
      
      $package_type = $fields->field_package_type->value();
    
      /* Package type = a taxonomy term object, so define a new wrapper for getting the info */
      $term = entity_metadata_wrapper('taxonomy_term', $package_type);
      $widget = $term->field_widget->value();
      
    
      /* Depending on the widget itself (currently hardcoded), some extra actions are needed: show/hide fields */
      $default_form_element = _hc_package_types_form_element($product_id, $widget);
    
      $form['product_package_type'] = $default_form_element;
    }
  }
}



/**
 * Helper function for adding form elements
 */
function _hc_package_types_form_element($entity_id, $widget = 'blank_calendar') {

  $element = array();

  $element['#prefix'] = 'Below is the form element<br /><div id="choose-package-type-container">';
  $element['#suffix'] = '</div>';
  $element['#weight'] = '20';

  switch ($widget) {
    case 'fixed_dates':
      $element['#type'] = 'select';
      $element['#options'] = array('Eerste', 'Tweede');
      break;
    case 'filled_in_calendar':
      $element['#type'] = 'textfield';
      break;
    case 'blank_calendar':
    default:
      $element['#type'] = 'date_popup';
      
      // TODO: REGION-SPECIFIC!
      $element['#date_format'] = 'm.d.Y';
      break;
  }
  
  return $element;
  
}