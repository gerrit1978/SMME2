<?php


/**
 * Implements hook_menu
 */
function hc_package_types_menu() {
  $items['admin/commerce/config/package'] = array(
    'title' => 'Package Type settings',
    'description' => 'Settings for different package types',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hc_packages_settings_form'),
    'file' => 'hc_package_types.admin.inc',
    'access arguments' => array('configure store'),
  );
  
  return $items;
}


/**
 * Implements hook_commerce_cart_attributes_refresh_alter
 */
function hc_package_types_commerce_cart_attributes_refresh_alter(&$commands, $form, $form_state) {
#
#  $product = $form_state['default_product'];
#  
#  // only call this hook for TEAM PACKAGE products
#  $type = $product->type;
#  if ($type != 'team_package') {
#    return;
#  }
  
#  /* Check if this newly chosen product is associated with a specific PACKAGE TYPE (field_package_type) */
#  $fields = entity_metadata_wrapper('commerce_product', $product);
#  $package_type = $fields->field_package_type->value();
  
#  /* Package type = a taxonomy term object, so define a new wrapper for getting the info */
#  $term = entity_metadata_wrapper('taxonomy_term', $package_type);
#  $widget = $term->field_widget->value();

#  /* Depending on the widget itself (currently hardcoded), some extra actions are needed: show/hide fields */
#  $output = _hc_package_types_actions($widget);

#  $commands[] = ajax_command_prepend('form.commerce-add-to-cart', $output);

#  /* Execute commands */
#  // DEBUG
#  // $commands[] = ajax_command_alert('Command has been executed');
}


/**
 * Implements hook_commerce_cart_product_add()
 */
function hc_package_types_commerce_cart_product_add($order, $product, $quantity, $line_item) {
/*  print "<pre>";
  print_r($order);
  print_r($product);
  print "</pre>";
  exit();
*/
}


/**
 * Implements hook_preprocess_node()
 */
function hc_package_types_preprocess_node(&$variables) {
  if ($variables['type'] != variable_get('hc_packages_team_package_node_type', '')) {
    return;
  }
  print "<pre>";
  print_r($variables);
  print "</pre>";
  exit();
}



/**
 * Helper function for defining the actions of the different widgets
 */
function _hc_package_types_actions($widget = 'blank_calendar') {
  switch ($widget) {
    case 'fixed_dates':
      $output = "Here a list of selectable dates of group sessions will be shown";
      break;
    case 'filled_in_calendar':
      $output = "Here a partially filled in calendar will be shown";
      break;
    case 'blank_calendar':
      $output = "Here a blank calendar will be shown";
      break;
  }
  
  return $output;
}