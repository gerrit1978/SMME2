<?php


/**
 * @file
 *
 *
 */


/**
 * Implements hook_init
 */
function hc_regions_init() {

  // include javascript and css for form
  $path = drupal_get_path('module', 'hc_regions');
  drupal_add_js($path . '/js/hc_regions.js');
  drupal_add_css($path . '/css/hc_regions.css');


  // add region variable to session, if not existing   
  if (!isset($_SESSION) || (!isset($_SESSION['user_location'])) || (!is_array($_SESSION['user_location']))) { 


    include_once(DRUPAL_ROOT . '/includes/locale.inc');

    $ip = $_SERVER['REMOTE_ADDR'];
    
    // debugging
    $ip = "94.225.65.211";
    //$ip = "202.175.128.234"; // New Zealand
    
    $country_code = ip2country_get_country($ip);
    
    $country_list = country_get_list();
    $country_name = $country_list[$country_code];
  
    $continent_code = _hc_regions_country_to_continent($country_code);

    switch ($continent_code) {
      case 'SA':
      case 'AF':
      case 'OC':
        $continent_code = 'NA';
        break;
    }

    $continent_name = _hc_regions_continent_code_to_continent_name($continent_code);
    
    $user_location = array(
      'country_code' => $country_code,
      'country_name' => $country_name,
      'continent_code' => $continent_code,
      'continent_name' => $continent_name,
    );

    $_SESSION['user_location'] = $user_location;
  }

}



/**
 * Implements hook_block_info
 */
function hc_regions_block_info() {
  $blocks = array();
  
  $blocks['region-selection'] = array(
    'info' => 'User\'s Region Selector',
  );
  
  return $blocks;
}


/**
 * Implements hook_block_view
 */
function hc_regions_block_view($delta = "") {
  $block = array();
  
  switch ($delta) {
    case 'region-selection':
      $block['subject'] = '';
      $block['content'] = _hc_regions_block_region_selection();
  }
  
  return $block;
}


/**
 * Helper function for rendering region selection block
 */
function _hc_regions_block_region_selection() {
  
  $output = drupal_get_form('hc_regions_select_region_form');

  return $output;


}




/**
 * Drupal Form for selecting region
 */
function hc_regions_select_region_form($form, &$form_state) {

  if (!isset($_SESSION) || (!isset($_SESSION['user_location'])) || (!is_array($_SESSION['user_location']))) { 
    return array();
  }
  
  $user_location = $_SESSION['user_location'];
  $continent_code = $user_location['continent_code'];
  $continent_name = $user_location['continent_name'];
  $country_code = $user_location['country_code'];
  $country_name = $user_location['country_name'];


  $form = array();
  
  $form['intro'] = array(
    '#markup' => t('My current region is !continent_name.', array('!country_name' => $country_name, '!continent_name' => $continent_name)),
  );
  
  $form['change_region'] = array(
    '#title' => 'Change my region',
    '#type' => 'select',
    '#options' => array('NA' => 'America', 'EU' => 'Europe', 'AS' => 'Asia'),
    '#default_value' => "$continent_code",
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Change'),
  );
  
  return $form;
}



/**
 * Drupal Form for selecting region - SUBMIT
 */
function hc_regions_select_region_form_submit(&$form, &$form_state) {

  $user_location = $_SESSION['user_location'];
  $values = $form_state['values'];
  $new_continent_code = $values['change_region'];
  $new_continent_name = _hc_regions_continent_code_to_continent_name($new_continent_code);

  $new_user_location = array(
    'country_code' => $user_location['country_code'],
    'country_name' => $user_location['country_name'],
    'continent_code' => $new_continent_code,
    'continent_name' => $new_continent_name,
  );
  
  $_SESSION['user_location'] = $new_user_location;

}


/**
 * Helper function for linking continent code to continent name 
 */
function _hc_regions_continent_code_to_continent_name($continent_code) {
  switch ($continent_code) {
    case 'NA':
    case 'SA':
    case 'AF':
    case 'OC':
    default:
      $continent_name = "America";
      break;
    case 'EU':
      $continent_name = "Europe";
      break;
    case 'AS':
      $continent_name = "Asia";
      break;
  }
  
  return $continent_name;
}



/**
 * Helper function for linking country to continent 
 */
function _hc_regions_country_to_continent($country_code) {
  $continents = array(
    "AD" => "EU",
    "AE" => "AS",
    "AF" => "AS",
    "AG" => "NA",
    "AI" => "NA",
    "AL" => "EU",
    "AM" => "AS",
    "AN" => "NA",
    "AO" => "AF",
    "AQ" => "AN",
    "AR" => "SA",
    "AS" => "OC",
    "AT" => "EU",
    "AU" => "OC",
    "AW" => "NA",
    "AX" => "EU",
    "AZ" => "AS",
    "BA" => "EU",
    "BB" => "NA",
    "BD" => "AS",
    "BE" => "EU",
    "BF" => "AF",
    "BG" => "EU",
    "BH" => "AS",
    "BI" => "AF",
    "BJ" => "AF",
    "BM" => "NA",
    "BN" => "AS",
    "BO" => "SA",
    "BR" => "SA",
    "BS" => "NA",
    "BT" => "AS",
    "BV" => "AN",
    "BW" => "AF",
    "BY" => "EU",
    "BZ" => "NA",
    "CA" => "NA",
    "CC" => "AS",
    "CD" => "AF",
    "CF" => "AF",
    "CG" => "AF",
    "CH" => "EU",
    "CI" => "AF",
    "CK" => "OC",
    "CL" => "SA",
    "CM" => "AF",
    "CN" => "AS",
    "CO" => "SA",
    "CR" => "NA",
    "CU" => "NA",
    "CV" => "AF",
    "CX" => "AS",
    "CY" => "AS",
    "CZ" => "EU",
    "DE" => "EU",
    "DJ" => "AF",
    "DK" => "EU",
    "DM" => "NA",
    "DO" => "NA",
    "DZ" => "AF",
    "EC" => "SA",
    "EE" => "EU",
    "EG" => "AF",
    "EH" => "AF",
    "ER" => "AF",
    "ES" => "EU",
    "ET" => "AF",
    "FI" => "EU",
    "FJ" => "OC",
    "FK" => "SA",
    "FM" => "OC",
    "FO" => "EU",
    "FR" => "EU",
    "GA" => "AF",
    "GB" => "EU",
    "GD" => "NA",
    "GE" => "AS",
    "GF" => "SA",
    "GG" => "EU",
    "GH" => "AF",
    "GI" => "EU",
    "GL" => "NA",
    "GM" => "AF",
    "GN" => "AF",
    "GP" => "NA",
    "GQ" => "AF",
    "GR" => "EU",
    "GS" => "AN",
    "GT" => "NA",
    "GU" => "OC",
    "GW" => "AF",
    "GY" => "SA",
    "HK" => "AS",
    "HM" => "AN",
    "HN" => "NA",
    "HR" => "EU",
    "HT" => "NA",
    "HU" => "EU",
    "ID" => "AS",
    "IE" => "EU",
    "IL" => "AS",
    "IM" => "EU",
    "IN" => "AS",
    "IO" => "AS",
    "IQ" => "AS",
    "IR" => "AS",
    "IS" => "EU",
    "IT" => "EU",
    "JE" => "EU",
    "JM" => "NA",
    "JO" => "AS",
    "JP" => "AS",
    "KE" => "AF",
    "KG" => "AS",
    "KH" => "AS",
    "KI" => "OC",
    "KM" => "AF",
    "KN" => "NA",
    "KP" => "AS",
    "KR" => "AS",
    "KW" => "AS",
    "KY" => "NA",
    "KZ" => "AS",
    "LA" => "AS",
    "LB" => "AS",
    "LC" => "NA",
    "LI" => "EU",
    "LK" => "AS",
    "LR" => "AF",
    "LS" => "AF",
    "LT" => "EU",
    "LU" => "EU",
    "LV" => "EU",
    "LY" => "AF",
    "MA" => "AF",
    "MC" => "EU",
    "MD" => "EU",
    "ME" => "EU",
    "MG" => "AF",
    "MH" => "OC",
    "MK" => "EU",
    "ML" => "AF",
    "MM" => "AS",
    "MN" => "AS",
    "MO" => "AS",
    "MP" => "OC",
    "MQ" => "NA",
    "MR" => "AF",
    "MS" => "NA",
    "MT" => "EU",
    "MU" => "AF",
    "MV" => "AS",
    "MW" => "AF",
    "MX" => "NA",
    "MY" => "AS",
    "MZ" => "AF",
    "NA" => "AF",
    "NC" => "OC",
    "NE" => "AF",
    "NF" => "OC",
    "NG" => "AF",
    "NI" => "NA",
    "NL" => "EU",
    "NO" => "EU",
    "NP" => "AS",
    "NR" => "OC",
    "NU" => "OC",
    "NZ" => "OC",
    "OM" => "AS",
    "PA" => "NA",
    "PE" => "SA",
    "PF" => "OC",
    "PG" => "OC",
    "PH" => "AS",
    "PK" => "AS",
    "PL" => "EU",
    "PM" => "NA",
    "PN" => "OC",
    "PR" => "NA",
    "PS" => "AS",
    "PT" => "EU",
    "PW" => "OC",
    "PY" => "SA",
    "QA" => "AS",
    "RE" => "AF",
    "RO" => "EU",
    "RS" => "EU",
    "RU" => "EU",
    "RW" => "AF",
    "SA" => "AS",
    "SB" => "OC",
    "SC" => "AF",
    "SD" => "AF",
    "SE" => "EU",
    "SG" => "AS",
    "SH" => "AF",
    "SI" => "EU",
    "SJ" => "EU",
    "SK" => "EU",
    "SL" => "AF",
    "SM" => "EU",
    "SN" => "AF",
    "SO" => "AF",
    "SR" => "SA",
    "ST" => "AF",
    "SV" => "NA",
    "SY" => "AS",
    "SZ" => "AF",
    "TC" => "NA",
    "TD" => "AF",
    "TF" => "AN",
    "TG" => "AF",
    "TH" => "AS",
    "TJ" => "AS",
    "TK" => "OC",
    "TL" => "AS",
    "TM" => "AS",
    "TN" => "AF",
    "TO" => "OC",
    "TR" => "AS",
    "TT" => "NA",
    "TV" => "OC",
    "TW" => "AS",
    "TZ" => "AF",
    "UA" => "EU",
    "UG" => "AF",
    "UM" => "OC",
    "US" => "NA",
    "UY" => "SA",
    "UZ" => "AS",
    "VA" => "EU",
    "VC" => "NA",
    "VE" => "SA",
    "VG" => "NA",
    "VI" => "NA",
    "VN" => "AS",
    "VU" => "OC",
    "WF" => "OC",
    "WS" => "OC",
    "YE" => "AS",
    "YT" => "AF",
    "ZA" => "AF",
    "ZM" => "AF",
    "ZW" => "AF",
  );
  
  return $continents[$country_code];
}